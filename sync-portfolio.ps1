# Script PowerShell para sincronizar projeto principal e portf√≥lio
# Execute: .\sync-portfolio.ps1

Write-Host "üîÑ Iniciando sincroniza√ß√£o do portf√≥lio..." -ForegroundColor Cyan
Write-Host ""

# Fun√ß√£o para exibir mensagens coloridas
function Write-Status {
    param([string]$Message)
    Write-Host "[INFO] $Message" -ForegroundColor Blue
}

function Write-Success {
    param([string]$Message)
    Write-Host "[SUCCESS] $Message" -ForegroundColor Green
}

function Write-Warning {
    param([string]$Message)
    Write-Host "[WARNING] $Message" -ForegroundColor Yellow
}

function Write-Error {
    param([string]$Message)
    Write-Host "[ERROR] $Message" -ForegroundColor Red
}

# 1. Atualizar projeto principal
Write-Status "Atualizando projeto principal..."
# N√£o mudar de diret√≥rio, j√° estamos no projeto principal

if (Test-Path ".git") {
    Write-Status "Fazendo commit das mudan√ßas no projeto principal..."
    git add .
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    git commit -m "Atualiza√ß√£o autom√°tica - $timestamp"
    git push origin main
    Write-Success "Projeto principal atualizado!"
} else {
    Write-Error "N√£o √© um reposit√≥rio Git v√°lido!"
    exit 1
}

# 2. Atualizar clone do portf√≥lio
Write-Status "Atualizando clone do portf√≥lio..."
Set-Location ..\projeto-bd-modernizado-portifolio

if (Test-Path ".git") {
    Write-Status "Buscando mudan√ßas do upstream..."
    git fetch upstream
    
    Write-Status "Fazendo merge das mudan√ßas..."
    git merge upstream/main
    
    Write-Status "Enviando para o reposit√≥rio do portf√≥lio..."
    git push origin main
    
    Write-Success "Clone do portf√≥lio atualizado!"
} else {
    Write-Error "Clone do portf√≥lio n√£o √© um reposit√≥rio Git v√°lido!"
    exit 1
}

Write-Host ""
Write-Success "‚úÖ Sincroniza√ß√£o completa!"
Write-Status "O Render deve fazer deploy autom√°tico em alguns minutos."
Write-Host ""
Write-Warning "üí° Dica: Execute este script sempre que fizer mudan√ßas importantes no projeto principal."
